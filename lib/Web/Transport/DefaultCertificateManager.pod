=head1 NAME

Web::Transport::DefaultCertificateManager - Default certificate manager

=head1 SYNOPSIS

  use Web::Transport::DefaultCertificateManager;
  $cm = Web::Transport::DefaultCertificateManager->new ({
    ca_cert => $ca_cert,
    cert => $cert,
    key => $key,
  });

=head1 DESCRIPTION

The C<Web::Transport::DefaultCertifcateManger> module is a default
certificate manager (see L<Web::Transport/"CERTIFICATE MANAGER">).

=head1 METHOD

Following methods are available:

=over 4

=item $cm = Web::Transport::DefaultCertificateManager->new ({$name => $value, ...})

Create a certificate manager.

The first argument must be a hash reference, which can contain zero or
more name/value pairs of the options.

The TLS implementation accepts two options for root CA certificates:
I<CAfile> (which is a path to certificate bundle file) and I<CApath>
(which is a path to certificate collection directory).

The C<ca_cert> option value must be a bundle of root CA certificates
in the PEM file format, as a string, or a
L<Web::Transport::PKI::Certificate> object.  The value, if specified,
is used as a on-the-fly generated I<CAfile> file's content.

The C<ca_file> option value must be a B<path> to the root CA
certificates in the PEM file format.  The value, if specified, is used
a I<CAfile>.

If none of C<ca_cert> and C<ca_file> is specified, the root CA
certificates maintained by Mozilla is used as I<CAfile>.

Options C<cert>, C<cert_file>, C<key>, and C<key_file> can be
specified.  See L<AnyEvent::TLS> for their semantics and possible
values.

The certificate manager has no host-specific certificates for
SNI-based selection.

=item $cm->prepare ($name => $value, ...)->then (sub { ... })

=item {$name => $value, ...} = $cm->to_anyevent_tls_args_sync

=item {$name => $value, ...} = $cm->to_anyevent_tls_args_for_host_sync

See L<Web::Transport/"CERTIFICATE MANAGER">.

=back

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2018-2020 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
