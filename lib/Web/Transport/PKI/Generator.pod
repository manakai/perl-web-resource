=head1 NAME

Web::Transport::PKI::Generator - Factory methods of PKIX objects

=head1 DESCRIPTION

The C<Web::Transport::PKI::Generator> module has factory methods to
create various PKIX related objects.

=head1 METHODS

There are following methods:

=over 4

=item $gen = Web::Transport::PKI::Generator->new

Create a new instance of the generator.

=item $rsa = $gen->create_rsa_key ($name => $value, ...)

Create a new RSA key pair, using OpenSSL via L<Net::SSLeay>.  The
L<Web::Transport::PKI::RSAKey> object representing the created key is
returned.

Following option can be specified as name/value pair:

=over 4

=item bits => $int (Default: auto)

The bit length of the created key, as an integer.  In this version,
the default is C<2048>.

=back

=item $cert = $gen->create_certificate ($name => $value, ...)

Create a new X.509 certificate, using OpenSSL via L<Net::SSLeay>.  The
L<Web::Transport::PKI::Certificate> object representing the created
certificate is returned.

Following options can be specified as name/value pairs:

=over 4

=item version => $int? (Default: 2)

The version of the certifcate.  The value must be one of C<0> (v1),
C<1> (v2), or C<2> (v3).

=item serial_number => $bigint? (Default: 0)

The serial number of the certificate.  The value must be an integer or
a L<Math::BigInt> object.

=item not_before => $dt (Required)

The not before of the validity of the certificate.  The value must be
a Unix time number or a L<Web::DateTime> object.

=item not_after => $dt (Required)

The not after of the validity of the certificate.  The value must be a
Unix time number or a L<Web::DateTime> object.

=item issuer => $name (Required if root CA)

The issuer of the certificate.  The value must be a value that is
valid as the argument to the C<create> method of the
L<Web::Transport::PKI::Name> class.  Defaulted to the C<ca_cert>'s
C<subject>.

=item subject => $name (Required)

The subject of the certificate.  The value must be a value that is
valid as the argument to the C<create> method of the
L<Web::Transport::PKI::Name> class.

=item san_hosts => [$value1, $value2, ...]

The subject alternative names of the certificate.  The value, if
specified, must be an array reference of hosts.

A host can be represented in two forms: If a character string is
specified, it is interpreted as a C<dNSName>, i.e. a domain or a
wildcard domain, serialized in ASCII (A-labels).  If a L<Web::Host>
object is specified, it is interpreted as a C<dNSName> or an
C<iPAddress> depending on its C<is_domain> and C<is_ip> method values.

=item ca => $boolean

If true, certificate fields are configured for typical CA
certificates.

=item ee => $boolean

If true, certificate fields are configured for typical EE
certificates.

=item path_len_constraint => $integer?

The pathLenConstraint value of the basic constraints extension of the
certificate, if any, or C<undef>.

=item crl_urls => [$string1, $string2, ...]

The CRL distribution point URLs of the certificate.  If specified, the
value must be an array reference of character strings representing the
URLs.

=item aia_ocsp_url => $string?

The OCSP URL of the Authority Information Access extension of the
certificate as a character string, if any, or C<undef>.

=item aia_ca_issuers_url => $string?

The CA issuers URL of the Authority Information Access extension of
the certificate as a character string, if any, or C<undef>.

=item dv => $boolean

Whether it is a DV certificate or not.

=item ov => $boolean

Whether it is an OV certificate or not.

=item ev => $string?

The OID of the EV CA's certification policy in the dotted notaion, if
it is an EV certificate.  If the EV OID is specified, the
certification policy identifier of EV is also added as well as the EV
OID.

=item policy_oids => [$string1, $string2, ...]

The additional policy identifiers of the certifciation policy
extension of the certificate, as an array reference of OIDs in the
dotted notation.

=item cps_url => $string?

The CPS URL specified as a policy qualifer of a certifciation policy
of the certificate as a character string, if any, or C<undef>.  If
this option is specified but there is no other option specifying a
certification policy OID, the C<anyPolicy> OID is added.

=item policy_user_notice_text => $string?

The display text of the user notice of a policy qualifier of a
certification policy of the certifcate as a character string, if any,
or C<undef>.  If this option is specified but there is no other option
specifying a certification policy OID, the C<anyPolicy> OID is added.

=item name_constraints_permitted => [$item1, $item2, ...]

=item name_constraints_excluded => [$item1, $item2, ...]

The host ranges in the certifciate's name constraints extension's
permitted or excluded subtrees, if any.

A host range can be represented in three forms: If a character string
is specified, it is interpreted as a C<dNSName>, i.e. a domain or a
C<.> character followed by a domain, serialized in ASCII (A-labels).
If a L<Web::Host> object is specified, it is interpreted as a
C<dNSName> or an C<iPAddress> depending on its C<is_domain> and
C<is_ip> method values.  If it is an IP address, the CIDR address
range (subnet mask) is set to the full length of the address.  If an
array reference which has exactly two L<Web::Host> objects whose
C<is_ipv4> are true or whose C<is_ipv6> are true, the zeroth item is
interpreted as an C<iPAddress>'s IP address and the first item is
interpreted as an C<iPAddress>'s CIDR address range (subnet mask).


=item must_staple => $boolean

Whether the must-staple flag in the TLS feature extension of the
certificate is set or not.

=item ca_rsa => $rsa (Required)

The RSA key of the CA that signs the certificate.  The value must be a
L<Web::Transport::PKI::RSAKey> object.  The value can be same as
C<rsa>'s value when this is a root CA.

=item ca_cert => $cert (Required unless root CA)

The certificate (a L<Web::Transport::PKI::Certificate> object) of the
CA that signs the certificate.  This option can be omitted if this is
a root CA certificate and C<rsa>'s value is equal to C<ca_rsa>'s
value.

=item rsa => $rsa (Required)

The RSA key of the certifciate.  The value must be a
L<Web::Transport::PKI::RSAKey> object.

=back

=back

=head1 SEE ALSO

L<Web::Transport::PKI::Parser>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2018 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
