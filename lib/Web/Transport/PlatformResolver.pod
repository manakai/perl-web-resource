=head1 NAME

Web::Transport::PlatformResolver - Resolve domain names using platform's resolver

=head1 SYNOPSIS

  use Web::Transport::PlatformResolver;
  $resolver = Web::Transport::PlatformResolver->new;
  $resolver->resolve (Web::Host->parse_string ("example.com"))->then (sub {
    warn defined $_[0] && $_[0]->stringify;
  });

=head1 DESCRIPTION

The C<Web::Transport::PlatformResolver> module defines a name resolver
which resolves names using the system's resolution API.

This module is a resolver (see L<Web::Transport/"RESOLVERS">).

=head1 METHOD

Following methods are available:

=over 4

=item $resolver = Web::Transport::PlatformResolver->new

Create a resolver.

=item $promise = $resolver->resolve ($host, $name => $value, ...)

Resolve a domain.

The first argument must be a host (L<Web::Host>) to resolve.

Additionally, following named arguments can be specified:

=over 4

=item no_cache => $boolean

Ignored for this resolver (for now, at least).  That is, the
platform's DNS cache can't be disabled.

=item signal => $signal

The abort signal (L<AbortSignal>) for the resolution.  If the abort
controller (L<AbortController>) associated with the signal is aborted,
the resolution is aborted and the method's promise is rejected with an
object whose C<name> is C<AbortError> whenever possible.

=item debug => $debug

The debug mode.  The default value is 0 (not in the debug mode).  See
C<WEBUA_DEBUG> section in L<Web::Transport> for available mode values.

=back

The method returns a promise (L<Promise>), which is to be resolved
with the result.  If the host is a domain and is successfully resolved
into an IP address, or the host is an IP address, the promise is
resolved with a host (L<Web::Host>) representing that IP address.
Otherwise, it is resolved with C<undef>.

=back

=head1 SEE ALSO

L<Web::Transport::CachedResolver>.

=head1 SPECIFICATION

Web Transport Processing
<https://wiki.suikawiki.org/n/Web%20Transport%20Processing>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2016-2018 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
